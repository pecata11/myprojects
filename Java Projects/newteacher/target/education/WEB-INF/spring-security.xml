<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	   		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<!-- This is where we configure Spring-Security  -->
	<security:http auto-config="true" use-expressions="true" access-denied-page="/api/auth/denied" >
	
		<security:intercept-url pattern="/api/auth/login" access="permitAll"/>
		<security:intercept-url pattern="/api/signup" access="permitAll"/>
		
		<security:intercept-url pattern="/api/quizzes/add" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/lessonEdit/questionImage" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/quizzes/edit" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/quizzes/assign" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/teachers/add" access="hasRole('ROLE_ADMIN')"/>  
		<security:intercept-url pattern="/api/leaderboard" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/students/" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/students/delete" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/students/edit" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/draft/autosave" access="hasRole('ROLE_ADMIN')"/>
		
		<security:intercept-url pattern="/api/quizzes/create" access="hasRole('ROLE_ADMIN')"/>
		
		
		<security:intercept-url pattern="/api/classes/create" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/classes/assign" access="hasRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/api/dashboard/*" access="hasRole('ROLE_ADMIN')"/>
		
		
		<security:intercept-url pattern="/api/quizzes/list" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER', 'ROLE_STUDENT')"/>
		<security:intercept-url pattern="/api/quizzes/start" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER', 'ROLE_STUDENT')"/>
		<security:intercept-url pattern="/api/quizzes/iterate" access="hasAnyRole('ROLE_ADMIN', 'ROLE_USER', 'ROLE_STUDENT')"/>
		
		
		
		<security:form-login
				login-page="/api/auth/login" 
				authentication-failure-url="/api/auth/login?error=true" 
				default-target-url="/api/home"/>
			
		<security:logout 
				invalidate-session="true" 
				logout-success-url="/api/auth/login" 
				logout-url="/api/auth/logout"/>
	
	</security:http>
	
	<!-- Declare an authentication-manager to use a custom userDetailsService -->
	<security:authentication-manager>
	        <security:authentication-provider user-service-ref="loginService">
 	        		<security:password-encoder ref="passwordEncoder"/> 
	        </security:authentication-provider>
	</security:authentication-manager>
	
	<!-- Use a Md5 encoder since the user's passwords are stored as Md5 in the database -->
	<bean class="org.springframework.security.authentication.encoding.Md5PasswordEncoder" id="passwordEncoder"/>

	<!-- A custom service where Spring will retrieve users and their corresponding access levels  -->
	<bean id="loginService" class="com.xentio.eteacher.service.LoginService"/>
	
</beans>
